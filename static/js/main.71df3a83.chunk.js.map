{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/BudgetInputs.js","components/SetBudget.js","components/BudgetRemainingSpent.js","components/PurchaseInputs.js","components/AddTransaction.js","components/Transaction.js","components/TransactionList.js","components/Settings.js","components/CurrencySelect.js","components/SetCurrency.js","components/Footer.js","App.js","index.js"],"names":["Header","Row","className","Col","src","process","alt","to","icon","faSlidersH","state","action","type","transactions","filter","transaction","id","payload","currencys","currency","budgets","budget","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","deleteTransactions","addTransaction","clearBudget","addBudget","clearCurrency","addCurrency","BudgetInputs","props","selectedCurrency","onChangeAmount","amount","placeholder","onChange","App","toAmount","fromAmount","history","useHistory","useState","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fromCurrency","toCurrency","fetch","then","res","json","data","rates","useContext","map","selectedCurrencyTo","selectedCurrencyFrom","toSymbol","fromSymbol","amountTo","amountFrom","isNaN","Card","Body","e","target","Footer","Button","onClick","preventDefault","push","newBudget","Math","floor","random","variant","BudgetRemainingSpent","spentTo","spentFrom","budgetTo","budgetFrom","budgetToCurrency","budgetFromCurrency","toCurrencySymbol","fromCurrencySymbol","displayBudgetTo","item","reduce","acc","toFixed","displayBudgetFrom","displaySpentTo","displaySpentFrom","displayRemainingTo","displayRemainingFrom","xs","span","offset","md","PurchaseInputs","text","setText","htmlFor","alert","newTransaction","Transaction","displayToAmount","abs","displayFromAmount","ListGroup","Item","faShoppingBag","faTimesCircle","TransactionList","faPlusCircle","key","Settings","CurrencyRow","currencyOptions","onChangeCurrency","option","setCurrencyOptions","setFromCurrency","setToCurrency","firstCurrency","Object","keys","secondCurrency","base","newCurrency","faRedo","basename","Container","fluid","path","exact","component","SetBudget","AddTransaction","SetCurrency","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71df3a83.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Row, Col } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSlidersH } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Header = () => {\n  return (\n    <>\n      <Row className=\"mb-4 pt-5 pb-2 pl-3 pr-3 bg-blue fixed-top\">\n        <Col>\n          <h2 className=\"font-weight-bold title-text d-inline\">\n            <img\n              src={process.env.PUBLIC_URL + \"/travel-budget-logo.svg\"}\n              alt=\"Travel Budget web app logo\"\n              className=\"nav-brand\"\n            ></img>\n          </h2>\n        </Col>\n        <Col className=\"text-right\">\n          <Link to=\"/settings\">\n            <FontAwesomeIcon\n              className=\"fa-lg text-white mt-1\"\n              icon={faSlidersH}\n            />\n          </Link>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case \"DELETE_TRANSACTION\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id !== action.payload\n        ),\n      };\n\n    case \"DELETE_TRANSACTIONS\":\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          (transaction) => transaction.id === action.payload\n        ),\n      };\n    case \"ADD_TRANSACTION\":\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions],\n      };\n\n    case \"ADD_CURRENCY\":\n      return {\n        ...state,\n        currencys: [action.payload, ...state.currencys],\n      };\n\n    case \"CLEAR_CURRENCY\":\n      return {\n        ...state,\n        currencys: state.currencys.filter(\n          (currency) => currency.id === action.payload\n        ),\n      };\n\n    case \"CLEAR_BUDGET\":\n      return {\n        ...state,\n        budgets: state.budgets.filter((budget) => budget.id === action.payload),\n      };\n    case \"ADD_BUDGET\":\n      return {\n        ...state,\n        budgets: [action.payload, ...state.budgets],\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n// Initial state\nconst initialState = {\n  transactions: [],\n  budgets: [],\n  currencys: [],\n};\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id,\n    });\n  }\n  function deleteTransactions(transactions) {\n    dispatch({\n      type: \"DELETE_TRANSACTIONS\",\n      payload: transactions,\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction,\n    });\n  }\n\n  function clearCurrency(currencys) {\n    dispatch({\n      type: \"CLEAR_CURRENCY\",\n      payload: currencys,\n    });\n  }\n\n  function addCurrency(currency) {\n    dispatch({\n      type: \"ADD_CURRENCY\",\n      payload: currency,\n    });\n  }\n\n  function clearBudget(budgets) {\n    dispatch({\n      type: \"CLEAR_BUDGET\",\n      payload: budgets,\n    });\n  }\n\n  function addBudget(budget) {\n    dispatch({\n      type: \"ADD_BUDGET\",\n      payload: budget,\n    });\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        deleteTransactions,\n        addTransaction,\n\n        budgets: state.budgets,\n        clearBudget,\n        addBudget,\n\n        currencys: state.currencys,\n        clearCurrency,\n        addCurrency,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React from \"react\";\n\nexport default function BudgetInputs(props) {\n  const { selectedCurrency, onChangeAmount, amount } = props;\n\n  return (\n    <>\n      <input\n        type=\"number\"\n        className=\"input\"\n        value={amount}\n        placeholder=\"0.00\"\n        onChange={onChangeAmount}\n      />\n      <span className=\"d-inline\">{selectedCurrency}</span>\n    </>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\n\nimport BudgetInputs from \"./BudgetInputs\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App(currency) {\n  const history = useHistory();\n\n  const [exchangeRate, setExchangeRate] = useState(true);\n  const [amount, setAmount] = useState(\"\");\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState();\n\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangeRate(data.rates[toCurrency]));\n    }\n  });\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  const { addBudget } = useContext(GlobalContext);\n  const { currencys } = useContext(GlobalContext);\n\n  const { budgets } = useContext(GlobalContext);\n\n  const { clearBudget } = useContext(GlobalContext);\n\n  // Currency name\n  const toCurrency = currencys.map((currency) => currency.selectedCurrencyTo);\n  const fromCurrency = currencys.map(\n    (currency) => currency.selectedCurrencyFrom\n  );\n\n  // Currency symbol\n  const toSymbol = currencys.map((currency) => currency.toSymbol);\n  const fromSymbol = currencys.map((currency) => currency.fromSymbol);\n\n  var amountTo = toAmount;\n  const selectedCurrencyTo = toCurrency;\n  const amountFrom = fromAmount;\n  const selectedCurrencyFrom = fromCurrency;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let path = `/`;\n    history.push(path);\n    clearBudget(budgets);\n\n    const newBudget = {\n      id: Math.floor(Math.random() * 100000000),\n      amountTo: +amountTo,\n      selectedCurrencyTo,\n      toSymbol,\n      fromSymbol,\n      amountFrom: +amountFrom,\n      selectedCurrencyFrom,\n    };\n    addBudget(newBudget);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <Link to=\"/\">\n            <p className=\"d-block text-white sm-title-text\">\n              Back to Dashboard\n            </p>\n          </Link>\n        </Col>\n      </Row>\n      {isNaN(currencys) ? (\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header className=\"p-4\">\n                <h1 className=\"title-text\">Set your trip budget</h1>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"mb-3\">\n                  <span className=\"d-inline\">{toSymbol}</span>\n                  <BudgetInputs\n                    className=\"d-inline\"\n                    selectedCurrency={toCurrency}\n                    onChangeAmount={handleToAmountChange}\n                    amount={toAmount}\n                  />\n                </div>\n                <div>\n                  <span className=\"d-inline\">{fromSymbol}</span>\n                  <BudgetInputs\n                    className=\"d-inline\"\n                    selectedCurrency={fromCurrency}\n                    onChangeAmount={handleFromAmountChange}\n                    amount={fromAmount}\n                  />\n                </div>\n              </Card.Body>\n              <Card.Footer>\n                <Button onClick={onSubmit} variant=\"btn btn-outline-blue\">\n                  Add\n                </Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      ) : (\n        <Row>\n          <Col>\n            <Card className=\"p-5\">\n              <p>\n                Please set your currency preferences before setting a your\n                budget.\n              </p>\n              <Link to=\"/set-currency\">\n                <p className=\"d-block text-secondary sm-title-text\">\n                  Currency Preferences\n                </p>\n              </Link>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nexport const BudgetRemainingSpent = () => {\n  const { budgets } = useContext(GlobalContext);\n  const { transactions } = useContext(GlobalContext);\n  const { currencys } = useContext(GlobalContext);\n\n  const spentTo = transactions.map((transaction) => transaction.amountTo);\n  const spentFrom = transactions.map((transaction) => transaction.amountFrom);\n\n  const budgetTo = budgets.map((budget) => budget.amountTo);\n  const budgetFrom = budgets.map((budget) => budget.amountFrom);\n\n  // Currency name\n  const budgetToCurrency = currencys.map(\n    (currency) => currency.selectedCurrencyTo\n  );\n\n  const budgetFromCurrency = currencys.map(\n    (currency) => currency.selectedCurrencyFrom\n  );\n\n  // Currency symbol\n  const toCurrencySymbol = currencys.map((currency) => currency.toSymbol);\n  const fromCurrencySymbol = currencys.map((currency) => currency.fromSymbol);\n\n  const displayBudgetTo = budgetTo\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const displayBudgetFrom = budgetFrom\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const displaySpentTo = spentTo\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const displaySpentFrom = spentFrom\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const remainingTo = displayBudgetTo - displaySpentTo;\n  const displayRemainingTo = remainingTo.toFixed(2);\n\n  const remainingFrom = displayBudgetFrom - displaySpentFrom;\n  const displayRemainingFrom = remainingFrom.toFixed(2);\n\n  return (\n    <>\n      <Row className=\"mb-5 text-center\">\n        <Col>\n          <h4 className=\"sm-title-text mb-0 text-white\">Remaining</h4>\n          <p className=\"mb-0 lg-text text-white font-weight-bold\">\n            {toCurrencySymbol}\n            {displayRemainingTo} {budgetToCurrency}\n          </p>\n          <p className=\"title-text mb-0 text-light\">\n            {fromCurrencySymbol}\n            {displayRemainingFrom} {budgetFromCurrency}\n          </p>\n          <p className=\"text-minus\">\n            {displayRemainingTo < 0 ? \"You have gone over your budget.\" : \"\"}\n          </p>\n          {isNaN(budgets) ? (\n            \"\"\n          ) : (\n            <Link to=\"set-budget\" className=\"text-white mb-3\">\n              Set Budget\n            </Link>\n          )}\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col\n          xs={{ span: 6, offset: 0 }}\n          md={{ span: 3, offset: 0 }}\n          className=\"text-center\"\n        >\n          <Card className=\"p-3\">\n            <h4 className=\"sm-title-text mb-0\">Budget</h4>\n            <p className=\"title-text mb-0 text-plus font-weight-bold\">\n              {toCurrencySymbol}\n              {displayBudgetTo} {budgetToCurrency}{\" \"}\n            </p>\n            <p className=\"sm-title-text mb-0 text-light\">\n              {fromCurrencySymbol}\n              {displayBudgetFrom} {budgetFromCurrency}\n            </p>\n          </Card>\n        </Col>\n        <Col\n          xs={{ span: 6, offset: 0 }}\n          md={{ span: 3, offset: 6 }}\n          className=\"text-center\"\n        >\n          <Card className=\"p-3\">\n            <h4 className=\"sm-title-text mb-0\">Spent</h4>\n            <p className=\"title-text mb-0 text-minus font-weight-bold\">\n              {toCurrencySymbol}\n              {displaySpentTo} {budgetToCurrency}{\" \"}\n            </p>\n            <p className=\"sm-title-text mb-0 text-light\">\n              {fromCurrencySymbol}\n              {displaySpentFrom} {budgetFromCurrency}\n            </p>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport default function PurchaseInputs(props) {\n  const { selectedCurrency, onChangeAmount, amount } = props;\n\n  return (\n    <>\n      <input\n        type=\"number\"\n        className=\"input\"\n        value={amount}\n        placeholder=\"0.00\"\n        onChange={onChangeAmount}\n      />\n      <span className=\"d-inline\"> {selectedCurrency}</span>\n    </>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\n\nimport PurchaseInputs from \"./PurchaseInputs\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  const history = useHistory();\n\n  const [text, setText] = useState(\"\");\n  const [exchangeRate, setExchangeRate] = useState(true);\n  const [amount, setAmount] = useState(\"\");\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState();\n\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangeRate(data.rates[toCurrency]));\n    }\n  });\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  const { addTransaction } = useContext(GlobalContext);\n  const { currencys } = useContext(GlobalContext);\n\n  // Currency name\n  const toCurrency = currencys.map((currency) => currency.selectedCurrencyTo);\n  const fromCurrency = currencys.map(\n    (currency) => currency.selectedCurrencyFrom\n  );\n\n  // Currency symbol\n  const toSymbol = currencys.map((currency) => currency.toSymbol);\n  const fromSymbol = currencys.map((currency) => currency.fromSymbol);\n\n  var amountTo = toAmount;\n  const selectedCurrencyTo = toCurrency;\n  const amountFrom = fromAmount;\n  const selectedCurrencyFrom = fromCurrency;\n\n  const onSubmit = (e) => {\n    if (text !== \"\") {\n      e.preventDefault();\n      let path = `/`;\n      history.push(path);\n    } else {\n      alert(\"Please enter purchase description.\");\n    }\n\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amountTo: +amountTo,\n      selectedCurrencyTo,\n      toSymbol,\n      fromSymbol,\n      amountFrom: +amountFrom,\n      selectedCurrencyFrom,\n    };\n    if (text !== \"\") {\n      addTransaction(newTransaction);\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <Link to=\"/\">\n            <p className=\"d-block text-white sm-title-text\">\n              Back to Dashboard\n            </p>\n          </Link>\n        </Col>\n      </Row>\n      {isNaN(currencys) ? (\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header className=\"p-4\">\n                <h1 className=\"title-text\">Add purchase</h1>\n              </Card.Header>\n              <Card.Body>\n                <div className=\"mb-3 d-inline-block\">\n                  <label htmlFor=\"text\">Purchase Description: </label>\n                  <input\n                    type=\"text\"\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    placeholder=\"Enter item name...\"\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <span className=\"d-inline\">{toSymbol}</span>\n                  <PurchaseInputs\n                    className=\"d-inline\"\n                    selectedCurrency={toCurrency}\n                    onChangeAmount={handleToAmountChange}\n                    amount={toAmount}\n                  />\n                </div>\n                <div>\n                  <span className=\"d-inline\">{fromSymbol}</span>\n                  <PurchaseInputs\n                    className=\"d-inline\"\n                    selectedCurrency={fromCurrency}\n                    onChangeAmount={handleFromAmountChange}\n                    amount={fromAmount}\n                  />\n                </div>\n              </Card.Body>\n              <Card.Footer>\n                <Button onClick={onSubmit} variant=\"btn btn-outline-blue\">\n                  Add\n                </Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      ) : (\n        <Row>\n          <Col>\n            <Card className=\"p-5\">\n              <p>\n                Please set your currency preferences before adding your\n                purchases.\n              </p>\n              <Link to=\"/set-currency\">\n                <p className=\"d-block text-secondary sm-title-text\">\n                  Currency Preferences\n                </p>\n              </Link>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nimport { Button, ListGroup, Row, Col } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimesCircle,\n  faShoppingBag,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Transaction = ({ transaction }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n\n  var toAmount = Math.abs(transaction.amountTo);\n  var displayToAmount = toAmount.toFixed(2);\n\n  var fromAmount = Math.abs(transaction.amountFrom);\n  var displayFromAmount = fromAmount.toFixed(2);\n\n  return (\n    <ListGroup.Item className=\"shadow mb-2\">\n      <Row>\n        <Col xs={1} className=\"text-left\">\n          <FontAwesomeIcon className=\"fa-lg text-blue\" icon={faShoppingBag} />\n        </Col>\n        <Col xs={4} className=\"text-left\">\n          {transaction.text}\n        </Col>\n        <Col xs={5} className=\"text-left\">\n          <span className=\"text-dark d-block\">\n            {transaction.toSymbol}\n            {displayToAmount} {transaction.selectedCurrencyTo}\n          </span>\n          <small className=\"d-block\">\n            {transaction.fromSymbol}\n            {displayFromAmount} {transaction.selectedCurrencyFrom}\n          </small>\n        </Col>\n        <Col className=\"text-right\">\n          <Button\n            className=\"bg-transparent border-0 p-0\"\n            onClick={() => deleteTransaction(transaction.id)}\n          >\n            <FontAwesomeIcon\n              className=\"fa-lg text-minus\"\n              icon={faTimesCircle}\n            />\n          </Button>\n        </Col>\n      </Row>\n    </ListGroup.Item>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Transaction } from \"./Transaction\";\nimport { Link } from \"react-router-dom\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const TransactionList = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <>\n      <Card className=\"p-3 mb-2 shadow\">\n        <Row>\n          <Col>\n            <h3 className=\"font-weight-bold title-text d-inline align-middle\">\n              Purchases\n            </h3>\n          </Col>\n          <Col className=\"text-right\">\n            <Link to=\"/add-transaction\">\n              <FontAwesomeIcon\n                className=\"fa-2x text-blue bg-white rounded-circle align-middle\"\n                icon={faPlusCircle}\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Card>\n      <ListGroup>\n        {transactions < 1 ? (\n          <p className=\"mt-3 text-center text-white\">Purchases is Empty.</p>\n        ) : (\n          transactions.map((transaction) => (\n            <Transaction key={transaction.id} transaction={transaction} />\n          ))\n        )}\n      </ListGroup>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\n\nexport const Settings = () => {\n  const history = useHistory();\n\n  const { clearBudget } = useContext(GlobalContext);\n  const { budgets } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let path = `/`;\n    history.push(path);\n    clearBudget(budgets);\n  };\n\n  return (\n    <Row className=\"mb-3 text-center\">\n      <Col>\n        <Card className=\"pt-5 pb-5\">\n          <Link to=\"/\" className=\"text-dark mb-3\">\n            Dashboard\n          </Link>\n          <Link to=\"/set-currency\" className=\"text-dark mb-3\">\n            Currency Preferences\n          </Link>\n          <Link to=\"set-budget\" className=\"text-dark mb-3\">\n            Set Budget\n          </Link>\n          <Button\n            onClick={onSubmit}\n            className=\"text-dark bg-transparent border-0 p-0\"\n          >\n            Clear Budget\n          </Button>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\n\nexport default function CurrencyRow(props) {\n  const { currencyOptions, selectedCurrency, onChangeCurrency } = props;\n  return (\n    <div>\n      <select\n        className=\"p-3\"\n        value={selectedCurrency}\n        onChange={onChangeCurrency}\n      >\n        {currencyOptions.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Button, Row, Col, Card } from \"react-bootstrap\";\n\nimport CurrencySelect from \"./CurrencySelect\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  const { currencys } = useContext(GlobalContext);\n  const { clearCurrency } = useContext(GlobalContext);\n  const { transactions } = useContext(GlobalContext);\n  const { deleteTransactions } = useContext(GlobalContext);\n\n  const history = useHistory();\n\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const firstCurrency = Object.keys(data.rates)[26];\n        const secondCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(secondCurrency);\n        setToCurrency(firstCurrency);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(\n        `${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`\n      ).then((res) => res.json());\n    }\n  }, [fromCurrency, toCurrency]);\n\n  const { addCurrency } = useContext(GlobalContext);\n\n  const selectedCurrencyTo = toCurrency;\n  const selectedCurrencyFrom = fromCurrency;\n\n  // Currency symbol currency converted from\n\n  let fromSymbol;\n  if (\n    selectedCurrencyFrom === \"USD\" ||\n    selectedCurrencyFrom === \"CAD\" ||\n    selectedCurrencyFrom === \"AUD\" ||\n    selectedCurrencyFrom === \"NZD\" ||\n    selectedCurrencyFrom === \"MXN\" ||\n    selectedCurrencyFrom === \"SGD\" ||\n    selectedCurrencyFrom === \"HKD\"\n  ) {\n    fromSymbol = \"\\u0024\";\n  } else if (selectedCurrencyFrom === \"EUR\") {\n    fromSymbol = \"\\u20AC\";\n  } else if (selectedCurrencyFrom === \"JPY\" || selectedCurrencyFrom === \"CNY\") {\n    fromSymbol = \"\\u00A5\";\n  } else if (selectedCurrencyFrom === \"GBP\") {\n    fromSymbol = \"\\u00A3\";\n  } else if (selectedCurrencyFrom === \"CHF\") {\n    fromSymbol = \"\\u0043\\u0048\\u0046\";\n  } else if (\n    selectedCurrencyFrom === \"SEK\" ||\n    selectedCurrencyFrom === \"NOK\" ||\n    selectedCurrencyFrom === \"ISK\" ||\n    selectedCurrencyFrom === \"DKK\"\n  ) {\n    fromSymbol = \"\\u006B\\u0072\";\n  } else if (selectedCurrencyFrom === \"KRW\") {\n    fromSymbol = \"\\u20A9\";\n  } else if (selectedCurrencyFrom === \"TRY\") {\n    fromSymbol = \"\\u20BA\";\n  } else if (selectedCurrencyFrom === \"RUB\") {\n    fromSymbol = \"\\u20BD\";\n  } else if (selectedCurrencyFrom === \"INR\") {\n    fromSymbol = \"\\u20B9\";\n  } else if (selectedCurrencyFrom === \"BRL\") {\n    fromSymbol = \"\\u0052\\u0024\";\n  } else if (selectedCurrencyFrom === \"ZAR\") {\n    fromSymbol = \"\\u0052\";\n  } else if (selectedCurrencyFrom === \"PHP\") {\n    fromSymbol = \"\\u20B1\";\n  } else if (selectedCurrencyFrom === \"CZK\") {\n    fromSymbol = \"\\u004B\\u010D\";\n  } else if (selectedCurrencyFrom === \"IDR\") {\n    fromSymbol = \"\\u0052\\u0070\";\n  } else if (selectedCurrencyFrom === \"MYR\") {\n    fromSymbol = \"\\u0052\\u004D\";\n  } else if (selectedCurrencyFrom === \"HUF\") {\n    fromSymbol = \"\\u0046\\u0074\";\n  } else if (selectedCurrencyFrom === \"HRK\") {\n    fromSymbol = \"\\u006B\\u006E\";\n  } else if (selectedCurrencyFrom === \"BGN\") {\n    fromSymbol = \"\\u043B\\u0432\";\n  } else if (selectedCurrencyFrom === \"RON\") {\n    fromSymbol = \"\\u006C\\u0065\\u0069\";\n  } else if (selectedCurrencyFrom === \"THB\") {\n    fromSymbol = \"\\u0E3F\";\n  } else if (selectedCurrencyFrom === \"PLN\") {\n    fromSymbol = \"\\u007A\\u0142\";\n  } else if (selectedCurrencyFrom === \"ILS\") {\n    fromSymbol = \"\\u20AA\";\n  } else {\n    fromSymbol = \"none\";\n  }\n  // Currency symbol currency converted to\n  let toSymbol;\n  if (\n    selectedCurrencyTo === \"USD\" ||\n    selectedCurrencyTo === \"CAD\" ||\n    selectedCurrencyTo === \"AUD\" ||\n    selectedCurrencyTo === \"NZD\" ||\n    selectedCurrencyTo === \"MXN\" ||\n    selectedCurrencyTo === \"SGD\" ||\n    selectedCurrencyTo === \"HKD\"\n  ) {\n    toSymbol = \"\\u0024\";\n  } else if (selectedCurrencyTo === \"EUR\") {\n    toSymbol = \"\\u20AC\";\n  } else if (selectedCurrencyTo === \"JPY\" || selectedCurrencyTo === \"CNY\") {\n    toSymbol = \"\\u00A5\";\n  } else if (selectedCurrencyTo === \"GBP\") {\n    toSymbol = \"\\u00A3\";\n  } else if (selectedCurrencyTo === \"CHF\") {\n    toSymbol = \"\\u0043\\u0048\\u0046\";\n  } else if (\n    selectedCurrencyTo === \"SEK\" ||\n    selectedCurrencyTo === \"NOK\" ||\n    selectedCurrencyTo === \"ISK\" ||\n    selectedCurrencyTo === \"DKK\"\n  ) {\n    toSymbol = \"\\u006B\\u0072\";\n  } else if (selectedCurrencyTo === \"KRW\") {\n    toSymbol = \"\\u20A9\";\n  } else if (selectedCurrencyTo === \"TRY\") {\n    toSymbol = \"\\u20BA\";\n  } else if (selectedCurrencyTo === \"RUB\") {\n    toSymbol = \"\\u20BD\";\n  } else if (selectedCurrencyTo === \"INR\") {\n    toSymbol = \"\\u20B9\";\n  } else if (selectedCurrencyTo === \"BRL\") {\n    toSymbol = \"\\u0052\\u0024\";\n  } else if (selectedCurrencyTo === \"ZAR\") {\n    toSymbol = \"\\u0052\";\n  } else if (selectedCurrencyTo === \"PHP\") {\n    toSymbol = \"\\u20B1\";\n  } else if (selectedCurrencyTo === \"CZK\") {\n    toSymbol = \"\\u004B\\u010D\";\n  } else if (selectedCurrencyTo === \"IDR\") {\n    toSymbol = \"\\u0052\\u0070\";\n  } else if (selectedCurrencyTo === \"MYR\") {\n    toSymbol = \"\\u0052\\u004D\";\n  } else if (selectedCurrencyTo === \"HUF\") {\n    toSymbol = \"\\u0046\\u0074\";\n  } else if (selectedCurrencyTo === \"HRK\") {\n    toSymbol = \"\\u006B\\u006E\";\n  } else if (selectedCurrencyTo === \"BGN\") {\n    toSymbol = \"\\u043B\\u0432\";\n  } else if (selectedCurrencyTo === \"RON\") {\n    toSymbol = \"\\u006C\\u0065\\u0069\";\n  } else if (selectedCurrencyTo === \"THB\") {\n    toSymbol = \"\\u0E3F\";\n  } else if (selectedCurrencyTo === \"PLN\") {\n    toSymbol = \"\\u007A\\u0142\";\n  } else if (selectedCurrencyTo === \"ILS\") {\n    toSymbol = \"\\u20AA\";\n  } else {\n    toSymbol = \"none\";\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let path = `/`;\n    history.push(path);\n    clearCurrency(currencys);\n    deleteTransactions(transactions);\n\n    const newCurrency = {\n      id: Math.floor(Math.random() * 100000000),\n      selectedCurrencyTo,\n      selectedCurrencyFrom,\n      toSymbol,\n      fromSymbol,\n    };\n\n    addCurrency(newCurrency);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <Link to=\"/\">\n            <p className=\"d-block text-white sm-title-text\">\n              Back to Dashboard\n            </p>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card className=\"text-center\">\n            <Card.Header className=\"p-4\">\n              <h1 className=\"title-text\">\n                Set Currency Preferences for your trip\n              </h1>\n            </Card.Header>\n            <Card.Body>\n              <p className=\"\">Select your usual currency:</p>\n              <CurrencySelect\n                currencyOptions={currencyOptions}\n                selectedCurrency={fromCurrency}\n                onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n              />\n              <p className=\"mt-4\">\n                Select the currency of the country you are visiting:\n              </p>\n              <CurrencySelect\n                currencyOptions={currencyOptions}\n                selectedCurrency={toCurrency}\n                onChangeCurrency={(e) => setToCurrency(e.target.value)}\n              />\n            </Card.Body>\n            <Card.Footer>\n              <Button onClick={onSubmit} variant=\"btn btn-outline-blue\">\n                Set\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default App;\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nimport { Row, Col, Button } from \"react-bootstrap\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Footer = () => {\n  const { transactions } = useContext(GlobalContext);\n  const { deleteTransactions } = useContext(GlobalContext);\n  return (\n    <Row className=\"footer pt-3 bg-white fixed-bottom border-top\">\n      <Col className=\"text-right pr-5\">\n        <Button\n          className=\"bg-transparent btn p-0 border-0\"\n          onClick={() => deleteTransactions(transactions)}\n        >\n          <FontAwesomeIcon\n            className=\"fa-md text-purple text-dark\"\n            icon={faRedo}\n          />\n          <p className=\"d-block text-secondary sm-title-text\">Clear All</p>\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Header } from \"./components/Header\";\nimport SetBudget from \"./components/SetBudget\";\nimport { BudgetRemainingSpent } from \"./components/BudgetRemainingSpent\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { Settings } from \"./components/Settings\";\nimport SetCurrency from \"./components/SetCurrency\";\nimport { Footer } from \"./components/Footer\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router basename={\"/travel-budget\"}>\n        <Container fluid className=\"min-vh-100\">\n          <Header />\n          <Route path=\"/set-budget\" exact component={SetBudget} />\n          <Route path=\"/\" exact component={BudgetRemainingSpent} />\n          <Route path=\"/add-transaction\" exact component={AddTransaction} />\n          <Route path=\"/\" exact component={TransactionList} />\n          <Route path=\"/settings\" exact component={Settings} />\n          <Route path=\"/set-currency\" exact component={SetCurrency} />\n          <Route path=\"/\" exact component={Footer} />\n        </Container>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}